// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  role          Role         @default(USER)
  email         String       @unique
  emailVerified DateTime?
  password      String
  image         String?
  gameshows     Json[]
  friends       Friendship[] @relation(name: "users")
  friendOf      Friendship[] @relation(name: "friendUsers")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@map("users")
}

model Friendship {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  friendId  String   @db.ObjectId
  user      User     @relation("users", fields: [userId], references: [id])
  friend    User     @relation("friendUsers", fields: [friendId], references: [id])
  status    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("friendships")
}

enum Role {
  USER
  ADMIN
  PREMIUM
}
